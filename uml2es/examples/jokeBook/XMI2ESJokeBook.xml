<export><workspace name="XMI2ESJokeBook"><query name="Step 1 - Deploy Model and Extended Model" focus="false" listorder="1" taborder="1" active="true" database="16707443980402438354" server="10585442599999906956" database-name="Documents" server-name="App-Services" mode="javascript">'use strict';

const es = require('/MarkLogic/entity-services/entity-services.xqy');
const sem = require("/MarkLogic/semantics.xqy");
declareUpdate();

// This deploys the ES model and the extended model. 
// If you ran loadXMI from gradle, you built all the required pieces. Now we just have make it official and to tell MarkLogic to use the model...

// From the database dropdown, make sure you have xmi2es-examples-jokeBook-content selected.

xdmp.documentInsert("/marklogic.com/entity-services/models/JokeBook.json", es.modelValidate(cts.doc("/xmi2es/es/JokeBook.json")),
  {collections: ['http://marklogic.com/entity-services/models']}
);
sem.rdfInsert(sem.rdfParse(cts.doc("/xmi2es/extension/JokeBook.ttl").toObject(), "turtle"))</query><query name="Query 1" focus="false" listorder="2" taborder="2" active="true" database="8734108019621827999" server="12936811969306392535" database-name="xmi2es-examples-jokeBook-content" server-name="xmi2es-examples-jokeBook" mode="sparql">## query

select * where {?s ?o ?p}</query><query name="Step 1 - Generated Triples WIth SJS/JSON" focus="true" listorder="3" taborder="3" active="true" database="8734108019621827999" server="12936811969306392535" database-name="xmi2es-examples-jokeBook-content" server-name="xmi2es-examples-jokeBook" mode="javascript">'use strict';

declareUpdate();

const sem = require("/MarkLogic/semantics.xqy");
const xesgen = require("/JokeBook/lib.sjs");

/* 
In this tab, we create sample data as JSON envelopes. Using the code generated by the toolkit's transform, we create triples and embed them in the envelope.
*/

// Let's create a school
var school = {
  "name": "LaffU"
};
var schoolOptions = {};
xesgen.doCalculation_FooleSchool_iri("", school, schoolOptions);
var schoolTriples = xesgen.setTriples_FooleSchool("", school, null, schoolOptions);
xdmp.documentInsert("/school/1.json", {"triples": schoolTriples, "instance": school});

// Let's create a contributor
var contrib = {
  "fooleID": "haha1",
  "firstName": "Mike",
  "lastName": "Havey",
  "nicknames": ["snake", "bix"],
  "attended": schoolOptions.iri
};
var contribOptions = {};
xesgen.doCalculation_JokeContributor_iri("", contrib, contribOptions);
xesgen.doCalculation_JokeContributor_brilliantWorksIRI("", contrib, contribOptions);
contribOptions.aliases = ['"foaf:HeeHawMan"'];
//var contribTriples = xesgen.setTriples_JokeContributor("", contrib, null, contribOptions);
xdmp.documentInsert("/contrib/1.json", {"triples": null /*contribTriples */, "instance": contrib});

/*
// Let's create some jokes
var joke = {
  "jokeID": "DeadParrot",
  "version": 1,
  "text": "What do you call a dead parrot? - A polygon",
  "tags": ["math", "nerd"],
  "funniness": 0.6,
  "parentalRating": 0.9,
  "excludedInCountries": ["CAN"],
  "updateDateTime": new Date(),
  "revisionComment": "Initial",
  "contribRole": "Author"
};
var jokeOptions = {};
xesgen.doCalculation_Joke_iri("", joke, jokeOptions);
jokeOptions.contributor = contribOptions.iri;
jokeOptions.revisionOf = jokeOptions.iri; // this should be optional...
var jokeTriples = xesgen.setTriples_Joke("", joke, null, jokeOptions); 
xdmp.documentInsert("/joke/1.json", {"triples": jokeTriples, "instance": joke});

var joke2 = {
  "jokeID": "RedSuspenders",
  "version": 1,
  "text": "Why does a fireman wear red suspenders - To keep his pants up",
  "tags": ["kid", "lame"],
  "funniness": 0.3,
  "parentalRating": 0.85,
  "excludedInCountries": ["CAN"],
  "updateDateTime": new Date(),
  "revisionComment": "Initial",
  "contribRole": "Author"
};
var joke2Options = {};
xesgen.doCalculation_Joke_iri("", joke2, joke2Options);
jokeOptions.contributor = contribOptions.iri;
jokeOptions.revisionOf = joke2Options.iri; // this should be optional...
var joke2Triples = xesgen.setTriples_Joke("", joke2, null, joke2Options); 
xdmp.documentInsert("/joke/2.json", {"triples": joke2Triples, "instance": joke2});

// Let's create a joke book
var book = {
  "isbn": "42",
  "title": "Math Jokes",
  "releaseDate": "2019-01-01",
  "editors": [contribOptions.iri],
  "selectedJokes": [joke2.iri]
};
var bookOptions  = {};
xesgen.doCalculation_JokeBook_IRI("", book, bookOptions); 
var bookTriples = xesgen.setTriples_JokeBook("", book, null, bookOptions);
xdmp.documentInsert("/book/1.json", {"triples": bookTriples, "instance": book});
*/</query></workspace></export>
