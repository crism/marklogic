# These settings are used by the Data Hub Framework when
# communicating with MarkLogic.
# The values in this file are meant as project-wide settings.
# You can override these properties for a specific environment
# by creating a gradle-{environment}.properties file.
# For example, to create a properties file for your prod environment create a file
# named gradle-prod.properties.
#
# ....
mlHost=localhost

# Your MarkLogic Username and Password
mlUsername=admin
mlPassword=admin

# If specified, the manage username/password combo is used with the ML Management REST API for managing application
# resources; this user must have the manage-admin and rest-admin roles.
#
# If these are not set, then mlUsername/mlPassword is used for managing application resources.
# mlManageUsername=
# mlManagePassword=
#
# To change the Manage Port
# mlManagePort=8002
#
# To use SSL on the Manage appserver (port 8002 by default)
# mlManageScheme=https
# mlManageSimpleSsl=true

# If specified, the admin username/password combo is used with the ML Management REST API for creating users and roles. This
# user must have the manage-admin or admin role. A good practice is to use your admin account here to create app-specific
# users and roles, which can then be used as mlManageUsername/mlManagePassword and mlUsername/mlPassword.
#
# These properties are also used for connecting to the admin application on port 8001 - e.g. for initializing ML and for
# waiting for ML to restart.
#
# If these properties are not set, then mlUsername/mlPassword will be used.
# mlAdminUsername=
# mlAdminPassword=
#
# To change the Admin Port
# mlAdminPort=8001
#
# To use SSL on the Admin appserver (port 8001 by default)
# mlAdminScheme=https
# mlAdminSimpleSsl=true


# If specified, these values can override where the DHF thinks
# MarkLogic default ports are at. You would only use this if you
# have changed the ports on which MarkLogic listens
#
# mlAppServicesPort=8000
#
# To use SSL on the AppServices appserver (port 8000 by default)
# mlAppServicesSimpleSsl=true


mlStagingAppserverName=xmi2es-examples-hr-STAGING
mlStagingPort=13300
mlStagingDbName=xmi2es-examples-hr-STAGING
mlStagingForestsPerHost=4
mlStagingAuth=digest
# To enable SSL for staging
# mlStagingSimpleSsl=true

mlFinalAppserverName=xmi2es-examples-hr-FINAL
mlFinalPort=13301
mlFinalDbName=xmi2es-examples-hr-FINAL
mlFinalForestsPerHost=4
mlFinalAuth=digest
# To enable SSL for final
# mlFinalSimpleSsl=true

mlTraceAppserverName=xmi2es-examples-hr-TRACING
mlTracePort=13305
mlTraceDbName=xmi2es-examples-hr-TRACING
mlTraceForestsPerHost=1
mlTraceAuth=digest
# To enable SSL for trace
# mlTraceSimpleSsl=true

mlJobAppserverName=xmi2es-examples-hr-JOBS
mlJobPort=13303
mlJobDbName=xmi2es-examples-hr-JOBS
mlJobForestsPerHost=1
mlJobAuth=digest
# To enable SSL for jobs
# mlJobSimpleSsl=true

mlModulesDbName=xmi2es-examples-hr-MODULES
mlModulesForestsPerHost=1

mlTriggersDbName=xmi2es-examples-hr-TRIGGERS
mlTriggersForestsPerHost=1

mlSchemasDbName=xmi2es-examples-hr-SCHEMAS
mlSchemasForestsPerHost=1

# You can override this to specify an alternate folder for your
# custom forest info. Defaults to user-config/forests/
# mlCustomForestPath=forests

# The name of the Role to create for Hub Access
mlHubUserRole=data-hub-role
mlHubUserName=data-hub-user
# this password is autogenerated for you via the 'gradle hubInit' task
mlHubUserPassword=i&OvxxbUPY&O&f?(wGvg

# set these so that mlgen will know which DB to deploy the ES model to. 
# Should point to app server for FINAL db
#mlAppServicesHost=localhost
#mlAppServicesPort=13301

